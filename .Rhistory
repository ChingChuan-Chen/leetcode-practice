nulldev = dev;
beta = rep(0, p)
beta_new = rep(0, p)
rsq = rep(0, maxNumPenalty)
betasMat = matrix(rep(0, p*maxNumPenalty), p)
obj = dev/2
for (i in 2:maxNumPenalty) {
penalty = penalties[i]
beta = beta_new
temp = beta_new
conv = TRUE
for (j in 1:maxIter) {
# beta0 = mean(y-x%*%temp)
for (k in 1:ncol(x)) {
# r = y - beta0 - x[,-k] %*% temp[-k]
# temp[k] = soft_thresholding(t(r/length(y))%*%x[,k], penalty) / mean(x[,k]^2)
uv <- beta[k] + (xyDots[k] - crossprod(xxDots[k, ], beta_new))/sum(w)
beta_new[k] <- (ifelse(abs(uv) < penalty, 0, uv - sign(uv) * penalty * alpha))/
(xxDots[k, k] / sum(w) + penalty * (1-alpha))
}
# print(temp)
# print(beta_new)
# beta0 = mean(y-x%*%temp)
intercept[i] = means_y - crossprod(means_x / diag(xxDots), beta_new)
if (max(abs(beta_new-beta))/sum(abs(beta_new)) < 1e-8)
break
print(c(i, j, k))
}
# if (conv){
#   locUpdate = 1:p
# } else {
#   locUpdate = which(abs(beta) > 0)
# }
# for (k in 1:length(locUpdate)) {
#   uv = beta[locUpdate[k]] + crossprod(xv[,locUpdate[k]], res) / sum(w)
#   # (xyDots[k] - crossprod(xxDots[k, ], beta_new)) / sum(w)
#   # (xyDots - xxDots %*% beta_new) / sum(w)
#   # colSums(sweep(xv, 1, res, "*")) / sum(w)
#   uv = ifelse(abs(uv) < penalty, 0, uv)
#   print(c(i, j, locUpdate[k], penalty, uv))
#   if (uv != 0) {
#     uv = uv + ifelse(uv > 0, -1, 1) * penalty * alpha
#     beta_new[locUpdate[k]] = uv /(xSqaureMean[locUpdate[k]] + penalty * (1-alpha))
#     betaDiff = beta_new[locUpdate[k]] - beta[locUpdate[k]]
#     res = res - xv[,locUpdate[k]] * betaDiff
#   }
# }
#
# conv = max(abs(beta - beta_new)) / sum(abs(beta_new)) < 1e-5
#
# beta = beta_new
# dev = crossprod(res, res)
# objOld = obj
# obj = dev/2 + (1-alpha)*penalty*sum(beta_new**2)/2 +
#   alpha*penalty*sum(abs(beta_new))
# prev_conv = conv
# conv = (objOld - obj)/obj < 1e-8
#
# res2 = yv - b0*sqrt(w) - xv %*% beta_new
# dev2 = crossprod(res2, res2)
# print(c(all.equal(res2, res), all.equal(dev2, dev)))
# if (prev_conv && conv)
#   break
# }
# intercept[i] = means_y - crossprod(means_x / xSqaureSum, beta_new)
# res = res - sqrt(w)*(intercept[i] - b0)
# b0 = intercept[i]
intercept[i] = b0
betasMat[,i] = beta_new
# rsq[i] = 1 - dev / nulldev
# if ((rsq[i]-rsq[i-1] < 1e-6*rsq[i-1]) || (rsq[i] > 0.999))
#   break
}
intercept = intercept[1:i]
rsq = rsq[1:i]
betasMat = betasMat[,1:i]
penalties = penalties[1:i]
# cbind(fit$a0, intercept[1:length(fit$a0)])
rbind(intercept[1:9], betasMat[ , 1:9])
coef(fit)[, 1:9]
max(abs(beta_new-beta))/sum(abs(beta_new))
beta_new
beta
max(abs(beta_new-beta))
beta_new
beta_new
beta_new
beta_new
beta_new
beta_new
beta_new
i=2
j=1
for (j in 1:maxIter) {
# beta0 = mean(y-x%*%temp)
for (k in 1:ncol(x)) {
# r = y - beta0 - x[,-k] %*% temp[-k]
# temp[k] = soft_thresholding(t(r/length(y))%*%x[,k], penalty) / mean(x[,k]^2)
uv <- beta[k] + (xyDots[k] - crossprod(xxDots[k, ], beta_new))/sum(w)
beta_new[k] <- (ifelse(abs(uv) < penalty, 0, uv - sign(uv) * penalty * alpha))/
(xxDots[k, k] / sum(w) + penalty * (1-alpha))
}
# print(temp)
# print(beta_new)
# beta0 = mean(y-x%*%temp)
intercept[i] = means_y - crossprod(means_x / diag(xxDots), beta_new)
if (max(abs(beta_new-beta))/sum(abs(beta_new)) < 1e-8)
break
print(c(i, j, k))
}
for (k in 1:ncol(x)) {
# r = y - beta0 - x[,-k] %*% temp[-k]
# temp[k] = soft_thresholding(t(r/length(y))%*%x[,k], penalty) / mean(x[,k]^2)
uv <- beta[k] + (xyDots[k] - crossprod(xxDots[k, ], beta_new))/sum(w)
beta_new[k] <- (ifelse(abs(uv) < penalty, 0, uv - sign(uv) * penalty * alpha))/
(xxDots[k, k] / sum(w) + penalty * (1-alpha))
}
beta_new
# print(temp)
# print(beta_new)
# beta0 = mean(y-x%*%temp)
intercept[i] = means_y - crossprod(means_x / diag(xxDots), beta_new)
max(abs(beta_new-beta))/sum(abs(beta_new))
beta_new
sum(abs(beta_new))
norm
beta_new
beta_new
beta
abs(beta_new-beta)
abs(beta_new-beta)
lasso_coord_desc = function(X,y,beta,lambda,tol=1e-6,maxiter=1000){
beta = as.matrix(beta)
X = as.matrix(X)
omega = rep(1/length(y),length(y))
obj = numeric(length=(maxiter+1))
betalist = list(length(maxiter+1))
betalist[[1]] = beta
beta0list = numeric(length(maxiter+1))
beta0 = sum(y-X%*%beta)/(length(y))
beta0list[1] = beta0
for (j in 1:maxiter) {
for (k in 1:length(beta)){
r = y - beta0 - X[,-k] %*% beta[-k]
beta[k] = soft_thresholding(t(omega*r)%*%X[,k], lambda) / sum(omega*X[,k]^2)
}
beta0 = sum(y-X%*%beta)/(length(y))
beta0list[j+1] = beta0
betalist[[j+1]] = beta
obj[j] = (1/2)*(1/length(y))*norm(omega*(y - X%*%beta -
beta0*rep(1,length(y))),'F')^2 + lambda*sum(abs(beta))
if (norm(rbind(beta0list[j], betalist[[j]]) - rbind(beta0, beta),'F') < tol) { break }
}
return(list(obj=obj[1:j],
beta=beta,
intercept=beta0))
}
library(glmnet)
p = 3
n = 100
x = matrix(rnorm(n*p), n)
x[,3] = x[,1] - 2*x[,2] + rnorm(n)
y = cbind(1, x) %*% c(-1, 2, -0.3, 0.7, sample(10**seq(-10, 1, length = n), p-3)) + rnorm(n, 0, 2)
xyDots <- t(x) %*% (y - mean(y))
penaltyMaxLog = log(max(abs(xyDots) / sum(w)))
penalties = exp(seq(penaltyMaxLog, penaltyMaxLog+log(lambda_min),, maxNumPenalty))
lasso_coord_desc(x, y, c(0, 0, 0), penalties[2])
fit = glmnet(x, y, "gaussian", standardize = FALSE)
coef(fit)[, 2]
library(data.table)
DT <- data.table(V1=rep(1:3, c(8, 10, 10)),
V2=c(seq(1.1, 1.5, 0.1), 1.7, 1.8, 1.9,
seq(1.3, 2, 0.1), 2.4, 2.5,
seq(1.7, 2.3, 0.1), 2.7, 2.8, 2.9))
DT
DT[ , cumsum(c(FALSE, diff(V2) > 0.1)), by=.(V1)]
DT
DT[ , cumsum(c(FALSE, diff(V2) > 0.1)), by=.(V1)]
1.2-1.1 > 0.1
1.3-1.2 > 0.1
sprintf("%.20f", 1.3-1.2)
sprintf("%.20f", 1.3-1.2)
DT[ , cumsum(V2 - shift(V2) > 0.1), by=.(V1)]
DT[ , cumsum((V2 - shift(V2)) > 0.1), by=.(V1)]
shift
DT[ , cumsum((V2 - shift(V2, fill=0)) > 0.1), by=.(V1)]
DT[ , cumsum((V2 - shift(V2, 1, 0)) > 0.1), by=.(V1)]
DT[ , shift(V2, 1, 0), by=.(V1)]
shift(V2, 1, 0)
DT[ , shift(V2, 1, 0), by=.(V1)]
DT[ , shift(V2, 1, 0) - V2, by=.(V1)]
DT[ , V2 - shift(V2, 1, 0), by=.(V1)]
DT[ , V2 - shift(V2, 1), by=.(V1)]
DT <- data.table(V1=rep(1:3, c(8, 10, 10)),
V2=c(seq(1.1, 1.5, 0.1), 1.7, 1.8, 1.9,
seq(1.3, 2, 0.1), 2.4, 2.5,
seq(1.7, 2.3, 0.1), 2.7, 2.8, 2.9))
DT[ , V2 - shift(V2, 1), by=.(V1)]
DT[ , c(FALSE, diff(V2) > 0.1), by=.(V1)]
DT[ , c(FALSE, diff(V2*10) > 1), by=.(V1)]
DT[ , cumsum(c(FALSE, diff(V2*10) > 1)), by=.(V1)]
DT[ , cumsum(c(FALSE, diff(as.integer(V2*10)) > 1L)), by=.(V1)]
DT[ , remove_col := cumsum(c(FALSE, diff(as.integer(V2*10)) > 1L)), by=.(V1)]
DT
DT[remove_col == 0]
library(data.table)
DT <- data.table(V1=rep(1:3, c(8, 10, 10)),
V2=c(seq(1.1, 1.5, 0.1), 1.7, 1.8, 1.9,
seq(1.3, 2, 0.1), 2.4, 2.5,
seq(1.7, 2.3, 0.1), 2.7, 2.8, 2.9))
DT[ , remove_col := cumsum(c(FALSE, diff(as.integer(V2*10)) > 1L)), by=.(V1)]
DT <- DT[remove_col == 0]
DT[ , remove_col := NULL]
DT
1.3 - 1.2 > 0.1
library(data.table)
DT <- data.table(V1=rep(1:3, c(8, 10, 10)),
V2=c(seq(1.1, 1.5, 0.1), 1.7, 1.8, 1.9,
seq(1.3, 2, 0.1), 2.4, 2.5,
seq(1.7, 2.3, 0.1), 2.7, 2.8, 2.9))
DT[ , remove_col := cumsum(c(FALSE, diff(as.integer(V2*10)) > 1e-8)), by=.(V1)]
DT <- DT[remove_col == 0]
DT[ , remove_col := NULL]
DT
DT
library(data.table)
DT <- data.table(V1=rep(1:3, c(8, 10, 10)),
V2=c(seq(1.1, 1.5, 0.1), 1.7, 1.8, 1.9,
seq(1.3, 2, 0.1), 2.4, 2.5,
seq(1.7, 2.3, 0.1), 2.7, 2.8, 2.9))
DT[ , remove_col := cumsum(c(FALSE, diff(as.integer(V2*10)) > 1e-8)), by=.(V1)]
DT
DT[ , remove_col := cumsum(c(FALSE, diff(as.integer(V2*10)) > 1e-4)), by=.(V1)]
DT
DT[ , remove_col := cumsum(c(FALSE, diff(as.integer(V2*10)) - 0.1 > 1e-8)), by=.(V1)]
DT <- DT[remove_col == 0]
DT
DT[ , remove_col := cumsum(c(FALSE, diff(as.integer(V2*10)) - 0.1 > 1e-4)), by=.(V1)]
DT
library(data.table)
DT <- data.table(V1=rep(1:3, c(8, 10, 10)),
V2=c(seq(1.1, 1.5, 0.1), 1.7, 1.8, 1.9,
seq(1.3, 2, 0.1), 2.4, 2.5,
seq(1.7, 2.3, 0.1), 2.7, 2.8, 2.9))
DT[ , remove_col := cumsum(c(FALSE, diff(as.integer(V2*10)) - 0.1 > 1e-4)), by=.(V1)]
DT
library(data.table)
DT <- data.table(V1=rep(1:3, c(8, 10, 10)),
V2=c(seq(1.1, 1.5, 0.1), 1.7, 1.8, 1.9,
seq(1.3, 2, 0.1), 2.4, 2.5,
seq(1.7, 2.3, 0.1), 2.7, 2.8, 2.9))
DT[ , remove_col := cumsum(c(FALSE, diff(V2) - 0.1 > 1e-4)), by=.(V1)]
DT
DT[ , remove_col := cumsum(c(FALSE, diff(V2) - 0.1 > 1e-6)), by=.(V1)]
DT <- DT[remove_col == 0]
DT
library(data.table)
library(data.table)
DT <- data.table(V1=rep(1:3, c(3, 3, 5)),
V2=c(1., 1.1, 1.3,
1.2, 1.4, 1.5,
1., 1.1, 1.2, 1.4, 1.5))
DT[ , remove_col := cumsum(c(FALSE, diff(V2) - 0.1 > 1e-6)), by=.(V1)]
DT
a = matrix(c(-0.0158190397485, 0.248407194274, 1.7856431709,
-1.7332794806, 3.24591037177, -8.17151727792), nrow=3, byrow=True)
a
a = matrix(c(-0.0158190397485, 0.248407194274, 1.7856431709,
-1.7332794806, 3.24591037177, -8.17151727792), nrow=3, byrow=TRUE)
a
b = c(-2.93121653805, -0.473581703084)
a %*% b
a = matrix(c(-0.0158190397485, 0.248407194274, 1.7856431709,
-1.7332794806, 3.24591037177, -8.17151727792), nrow=3, byrow=TRUE)
b = c(-2.93121653805, -0.473581703084)
a %*% b
a = matrix(c( 0.399378814624, 4.84818692701, 5.16833799056,
3.65087613626, 7.15282505233, -2.69839020735), nrow=3, byrow=TRUE)
b = c(-1.66443510044, -3.83129674668)
cc = c(2,2,2)
2 * a %*% b + cc
sum(c(7.35516211591, 1.38430553925, 0.191440860829) * c(3.4586289572, 2.5210430268, -2.20668375944))
2001*50000*8/1000/1000
2001*50000*8/1024/1024/1024
5001 x 200000 / 1024/1024/1024
5001 * 200000 / 1024/1024/1024
50001 * 200000 / 1024/1024/1024
2001 * 200000 / 1024/1024/1024
2001*50000*8/1024/1024/1024
2001 * 200000*/ / 1024/1024/1024
2001 * 200000*8 / 1024/1024/1024
4001 * 200000*8 / 1024/1024/1024
6001 * 200000*8 / 1024/1024/1024
( 464.378    +   420.354   +  427.682 )/3
( 144.228    +   143.084   +  145.651 )/3
210000000*3*8/1024/1024/1024
21000000000*3*8/1024/1024/1024
2100000000*3*8/1024/1024/1024
2100000000*3*8/1024/1024/1024
300000000*2*8/1024/1024/1024
l = readLines("../Downloads/leetcode-practice/README.md")
library(pipeR)
l = readLines("../Downloads/leetcode-practice/README.md")
library(stringr)
l %>>% str_detect("Java")
download.file
?download.file
leetcode_crawler_jar <- "https://github.com/ZhaoxiZhang/LeetCodeCrawler/blob/master/LeetCodeCrawler/LeetCodeCrawler.jar"
download.file(
leetcode_crawler_jar,
basename(leetcode_crawler_jar),
mode = "wb"
)
basename(leetcode_crawler_jar)
library(pipeR)
library(stringr)
leetcode_crawler_jar <- "https://github.com/ZhaoxiZhang/LeetCodeCrawler/raw/master/LeetCodeCrawler/LeetCodeCrawler.jar"
download.file(
leetcode_crawler_jar,
basename(leetcode_crawler_jar),
mode = "wb"
)
?warning
if (file.exists("config.json"))
system("java -jar LeetCodeCrawler.jar")
else {
stop("Please provide config.json with 4 values: username, password, language and outputDir.")
}
if (file.exists("config.json"))
system("java -jar LeetCodeCrawler.jar")
else {
stop("Please provide config.json with 4 values: username, password, language and outputDir.")
}
library(pipeR)
library(stringr)
library(httr)
library(xml2)
library(rvest)
install.packages("rvest")
library(pipeR)
library(stringr)
library(httr)
library(rvest)
library(xml2)
login_url <- "https://leetcode.com/accounts/login/"
problem_list <- "https://leetcode.com/api/problems/all/"
problem <- "https://leetcode.com/problems/%s/"
login_session <- html_session(login_url)
login_session
?POST
POST
?headers
login_session <- html_session(login_url)
login_session$response$cookies
login_session$response$cookies$"__cfduid"
login_session$response$cookies$
POST(
login_url,
user_agent(agent_name),
accept("*/*"),
add_headers(
Origin = home_url,
"Content-Type" = paste0("multipart/form-data; boundary=", boundary)
),
set_cookies(),
config = login_session$config,
handle = login_session$handle
)
login_session$response$cookies
?aggregate
?select
??select
?subset
login_session$response$cookies %>>% subset(name == "__cfduid", select = "value")
login_session$response$cookies %>>% subset(name == "__cfduid", select = "value")[1]
login_session$response$cookies %>>% subset(name == "__cfduid", select = "value") %>>% `[`(1)
ll <- readLines("https://raw.githubusercontent.com/ChingChuan-Chen/Leetcode-1/master/README.md")
readLines("https://raw.githubusercontent.com/ChingChuan-Chen/Leetcode-1/master/README.md")
ll
l <- readLines("https://raw.githubusercontent.com/mJackie/leetcode/master/TopInterview.md")
l
str_extract_all(l, "|\\s+(\\d+)\\s+|")
l[1]
l[20]
str_extract_all(l, "(\\d{3})")
str_extract(l, "(\\d{3})")
ll
str_extract(l, "(\\d{3})") %>>% as.integer %>>% (sprintf("%04i", .))
str_extract(l, "(\\d{3})") %>>% as.integer %>>% (sprintf("%04i", .)) %>>% na.omit
all_interviewed_questions <- str_extract(l, "(\\d{3})") %>>% as.integer %>>% (sprintf("%04i", .)) %>>% na.omit
all_interviewed_questions
all_interviewed_questions <- str_extract(l, "(\\d{3})") %>>% as.integer %>>% na.omit %>>% (sprintf("%04i", .))
all_interviewed_questions
ll
ll %>>% str_extract_all("\\|(\d+)\\|([^|]+)\\|([^|]+)\\|([^|]+)\\|([^|]+)\\|([^|]+)\\|([^|]+)")
ll %>>% str_extract_all("\\|(\\d+)\\|([^|]+)\\|([^|]+)\\|([^|]+)\\|([^|]+)\\|([^|]+)\\|([^|]+)")
ll[1]
ll[[2]]
ll[[3]]
ll[[4]]
ll[[10]]
ll[[8]]
ll[[7]]
ll %>>% str_extract_all("\\|(\\d+)\\|([^|]+)\\|([^|]+)\\|([^|]+)\\|([^|]+)\\|([^|]+)\\|([^|]+)") %>>% `[[`(7)
ll %>>% str_extract_all("\\|(\\d+)\\|([^|]+)\\|([^|]+)\\|([^|]+)\\|([^|]+)\\|([^|]+)\\|([^|]+)\\|([^|]+)\\|([^|]+)\\|") %>>% `[[`(7)
str_extract_all
ll %>>% str_extract_all("\\|(\\d+)\\|([^\\|]+)\\|([^\\|]+)\\|([^\\|]+)\\|([^\\|]+)\\|([^\\|]+)\\|([^\\|]+)\\|([^\\|]+)\\|([^\\|]+)\\|") %>>% `[[`(7)
ll %>>% str_extract_all("\\|(\\d+)\\|([^\\|]+)\\|([^\\|]+)\\|") %>>% `[[`(7)
ll %>>% str_match_all("\\|(\\d+)\\|([^\\|]+)\\|([^\\|]+)\\|") %>>% `[[`(7)
ll %>>% str_match_all("\\|(\\d+)\\|([^\\|]+)\\|([^\\|]+)\\|([^\\|]+)\\|([^\\|]+)\\|([^\\|]+)\\|") %>>% `[[`(7)
ll
ll %>>% str_match_all("\\|(\\d+)\\|([^\\|]+)\\|([^\\|]+)\\|([^\\|]+)\\|([^\\|]+)\\|([^\\|]+)\\|") %>>% `[[`(7)
ll %>>% str_match_all("\\|(\\d+)\\|([^\\|]+)\\|([^\\|]+)\\|([^\\|]+)\\|([^\\|]+)\\|([^\\|]+)\\|([^\\|]+)\\|") %>>% `[[`(7)
ll %>>% str_match_all("\\|(\\d+)\\|([^\\|]+)\\|([^\\|]+)\\|([^\\|]+)\\|([^\\|]+)\\|([^\\|]+)\\|([^\\|]+)?\\|") %>>% `[[`(7)
ll %>>% str_match_all("\\|(\\d+)\\|([^\\|]+)\\|([^\\|]+)\\|([^\\|]+)\\|([^\\|]+)\\|([^\\|]+)\\|([^\\|]+)?\\|([^\\|]+)?\\|") %>>% `[[`(7)
ll %>>% str_match_all("\\|(\\d+)\\|([^\\|]+)\\|([^\\|]+)\\|([^\\|]+)\\|([^\\|]+)\\|([^\\|]+)\\|([^\\|]+)?\\|([^\\|]+)?\\|([^\\|]+)?\\|") %>>% `[[`(7)
ll %>>% str_match_all("\\|(\\d+)\\|([^\\|]+)\\|([^\\|]+)?\\|([^\\|]+)?\\|([^\\|]+)?\\|([^\\|]+)?\\|([^\\|]+)?\\|([^\\|]+)?\\|([^\\|]+)?\\|") %>>% `[[`(7)
ll %>>% str_match_all("\\|(\\d+)\\|([^\\|]+)\\|([^\\|]+)?\\|([^\\|]+)?\\|([^\\|]+)?\\|([^\\|]+)?\\|([^\\|]+)?\\|([^\\|]+)?\\|([^\\|]+)?\\|")
ll %>>% str_match_all("\\|(\\d+)\\|([^\\|]+)\\|([^\\|]+)?\\|([^\\|]+)?\\|([^\\|]+)?\\|([^\\|]+)?\\|([^\\|]+)?\\|([^\\|]+)?\\|([^\\|]+)?\\|") %>>%
do.call(what = rbind)
table <- ll %>>% str_match_all("\\|(\\d+)\\|([^\\|]+)\\|([^\\|]+)?\\|([^\\|]+)?\\|([^\\|]+)?\\|([^\\|]+)?\\|([^\\|]+)?\\|([^\\|]+)?\\|([^\\|]+)?\\|") %>>%
do.call(what = rbind)
table
table[,6]
table[,2]
table[,9]
table[,10]
table[,1]
table[,1]
table[,2]
table[,3]
table[,2] %in% all_interviewed_questions
interviewed_mark <- rep("", nrow(table))
interviewed_mark <- rep("", nrow(table))
interviewed_mark[table[,2] %in% all_interviewed_questions] <- "*"
interviewed_mark
sprintf("|%s|%s|%s|%s|%s|", table[,2], table[,3], interviewed_mark, table[,6], table[,10])
rust_link <- str_replace_all(rust_link, "\\./src/([^^/]+)/([^.]+).py", "./S\\1/src/main.rs")
rust_link <- str_replace(table[,6], "python", "rust")
rust_link <- str_replace_all(rust_link, "\\./src/([^^/]+)/([^.]+).py", "./S\\1/src/main.rs")
rust_link
table[,6]
rust_link <- str_replace_all(rust_link, "\\./src/([^^/]+)/([^.]+).py", "./src/\\1/\\2.rs")
sprintf("|%s|%s|%s|%s|%s|", table[,2], table[,3], interviewed_mark, table[,6], table[,10])
sprintf("|%s|%s|%s|%s|%s|%s|", table[,2], table[,3], interviewed_mark, table[,6], rust_link, table[,10])
ll2 <- sprintf("|%s|%s|%s|%s|%s|%s|", table[,2], table[,3], interviewed_mark, table[,6], rust_link, table[,10])
write(ll2, "test.txt")
interviewed_mark <- rep(" ", nrow(table))
interviewed_mark[table[,2] %in% all_interviewed_questions] <- "*"
rust_link <- str_replace(table[,6], "python", "rust")
rust_link <- str_replace_all(rust_link, "\\./src/([^^/]+)/([^.]+).py", "./src/\\1/\\2.rs")
ll2 <- sprintf("|%s|%s|%s|%s|%s|%s|", table[,2], table[,3], interviewed_mark, table[,6], rust_link, table[,10])
write(ll2, "test.txt")
rust_link
str_replace_all(rust_link, "\\./src/([^^/]+)/([^.]+).py", "\\1/")
str_replace_all(rust_link, "\\./src/([^^/]+)/([^.]+).py", "\\1")
rust_link
rust_link <- str_replace(table[,6], "python", "rust")
str_replace_all(rust_link, "\\./src/([^^/]+)/([^.]+).py", "\\1")
str_replace_all(rust_link, "[rust]+\\(\\./src/([^^/]+)/([^.]+).py\\)", "\\1")
str_replace_all(rust_link, "\\[rust\\]\\(\\./src/([^^/]+)/([^.]+).py\\)", "\\1")
folder_names <- str_replace_all(rust_link, "\\[rust\\]\\(\\./src/([^^/]+)/([^.]+).py\\)", "\\1")
folder_names
folder_names
?mkdir
??mkdir
??touch
??write
dir.create("src")
for (ff in folder_names) {
dir.create(paste0("src/", ff))
write("", paste0("src/", ff, ".gitkeep"))
}
folder_names
folder_name[269] <- "0486-Predict-the-Winner"
folder_names[269] <- "0486-Predict-the-Winner"
dir.create("src")
for (ff in folder_names) {
dir.create(paste0("src/", ff))
write("", paste0("src/", ff, "/.gitkeep"))
}
setwd("C:/Users/jamal_chen/Downloads/leetcode-practice")
ll <- readLines("https://raw.githubusercontent.com/ChingChuan-Chen/Leetcode-1/master/README.md")
table <- ll %>>% str_match_all("\\|(\\d+)\\|([^\\|]+)\\|([^\\|]+)?\\|([^\\|]+)?\\|([^\\|]+)?\\|([^\\|]+)?\\|([^\\|]+)?\\|([^\\|]+)?\\|([^\\|]+)?\\|") %>>%
do.call(what = rbind)
library(pipeR)
library(stringr)
library(httr)
library(rvest)
library(xml2)
ll <- readLines("https://raw.githubusercontent.com/ChingChuan-Chen/Leetcode-1/master/README.md")
table <- ll %>>% str_match_all("\\|(\\d+)\\|([^\\|]+)\\|([^\\|]+)?\\|([^\\|]+)?\\|([^\\|]+)?\\|([^\\|]+)?\\|([^\\|]+)?\\|([^\\|]+)?\\|([^\\|]+)?\\|") %>>%
do.call(what = rbind)
rust_link <- str_replace(table[,6], "python", "rust")
folder_names <- str_replace_all(rust_link, "\\[rust\\]\\(\\./src/([^^/]+)/([^.]+).py\\)", "\\1")
folder_names
src
ff
folder_names
folder_names[269]
folder_names[269] <- "0486-Predict-the-Winner"
for (ff in folder_names) {
write("", paste0("src/", ff, "/", str_extract(ff, "^\\d+"), ".py"))
fn <- paste0("src/", ff, "/", str_extract(ff, "^\\d+"), ".rs")
if (!file.exists(fn))
write("", fn)
}
for (ff in folder_names) {
fn <- paste0("src/", ff, "/.gitkeep")
if (file.exists(fn))
file.remove(fn)
}
